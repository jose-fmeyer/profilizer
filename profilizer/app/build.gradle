apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 27
    buildToolsVersion "27.0.0"
    defaultConfig {
        applicationId "com.profilizer"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'API_AUTH', '"dXNlcjp1c2VyMTIz"'
            buildConfigField 'String', 'BASE_END_POINT', '"http://localhost:8080/profilizer/api/"'
        }

        debug {
            buildConfigField 'String', 'API_AUTH', '"dXNlcjp1c2VyMTIz"'
            buildConfigField 'String', 'BASE_END_POINT', '"http://localhost:8080/profilizer/api/"'
            buildConfigField 'String', 'QA_BASE_END_POINT', '"http://localhost:8080/profilizer/api/"'
            applicationIdSuffix ".debug"
            debuggable true
        }
    }

    flavorDimensions "mock"

    productFlavors {
        prod {
            applicationId "com.profilizer.prod"
        }
        mock {
            dimension "mock"
            applicationId "com.profilizer.mock"
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile "com.android.support:appcompat-v7:$support_library"
    compile "com.android.support:cardview-v7:$support_library"
    compile "com.android.support:recyclerview-v7:$support_library"
    compile "com.android.support:design:$support_library"
    compile "com.android.support.constraint:constraint-layout:$constraint_layout_version"

    // Retrofit 2 
    compile "com.squareup.retrofit2:retrofit:$retrofit"
    compile 'com.squareup.retrofit2:converter-moshi:2.3.0'
    compile 'com.squareup.moshi:moshi-adapters:1.5.0'
    compile "com.squareup.okhttp3:logging-interceptor:$okhttp3_interceptor"
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // Dagger 2 
    compile "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"

    //Rxjava2
    compile 'io.reactivex.rxjava2:rxjava:2.1.3'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'

    // mock retrofit response
    androidTestCompile "com.squareup.retrofit2:retrofit-mock:$retrofit"
    androidTestCompile 'com.squareup.okhttp3:mockwebserver:3.3.0'

    // Test
    androidTestCompile("com.android.support.test.espresso:espresso-core:$espressoVersion", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestCompile "org.mockito:mockito-core:$mockitoVersion"
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2') {
        // Conflicts
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }

    testCompile "junit:junit:$junit"
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:$mockitoKotlinVersion"
    testCompile 'org.junit.platform:junit-platform-runner:1.0.0-M3'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile "org.powermock:powermock-module-junit4:$powerMockito"
    testCompile "org.powermock:powermock-api-mockito:$powerMockito"
}

repositories {
    mavenCentral()
}
